source('C:/Users/Stefan/Dropbox/workplaces/R Studio/Masinsko ucenje - FON/K-means/start.R')
Qtx = 0.00:0.99
?seq()
Qtx = seq(0.01,0.99,0.01)
hq = 1/1+exp(Qtx)
plot(hq
)
hq = 1/1+exp(-Qtx)
)
plot(hq)
Qtx = seq(0.01,3.99,0.01)
hq = 1/1+exp(-Qtx)
cost = -log(1/(1+exp()))
plot(hq)
hq
plot(Qtx,hq)
plot(Qtx,hq,type='l')
Qtx = seq(0.001,3.999,0.001)
hq = 1/1+exp(-Qtx)
plot(Qtx,hq,type='l')
plot(Qtx,hq,type='l',ylim=c(0,4))
plot(Qtx,hq,type='l')
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # zar hq nije u intervalu [0,1] ?
cost = -log(1/(1+exp()))
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost)
log()
?log()
Qtx = seq(0.00001,3.99009,0.00001)
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost)
Qtx = seq(0.00001,2.99009,0.00001)
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost)
Qtx = seq(0,1000,0.00001)
Qtx = seq(0,1000,0.001)
hq = 1/(1+exp(-Qtx))
plot(hq)
Qtx = seq(0,10,0.001)
hq = 1/(1+exp(-Qtx))
plot(hq)
Qtx = seq(-10,10,0.001)
hq = 1/(1+exp(-Qtx))
plot(hq) # desni deo sigmidne funkcije
plot(Qtx,hq,type='l') # hq E [0.5,1)
Qtx = seq(-20,20,0.001)
hq = 1/(1+exp(-Qtx))
plot(hq) # desni deo sigmidne funkcije
plot(Qtx,hq,type='l') # hq E [0.5,1)
Qtx = seq(-10,10,0.001)
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost)
plot(hq,cost,type='l')
Qtx = seq(0,10,0.001)
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost,type='l')
Qtx = seq(-10,10,0.001)
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx)))
plot(hq,cost,type='l')
J = log(1/(1+exp(-Qtx))) + log(1-1/(1+exp(-Qtx)))
rm(list=ls())
Qtx = seq(-10,10,0.001)
J = log(1/(1+exp(-Qtx))) + log(1-1/(1+exp(-Qtx)))
plot(J,Qxt)
plot(J,Qtx)
plot(J,Qtx, type='l')
J = log(Qtx) + log(1-Qtx)
Qtx = seq(0,10,0.001)
J = log(Qtx) + log(1-Qtx)
/rand
?rand
?ran
?random
?r
y = runif(10000,0,1)
J = (1/(1+exp(-Qtx)) - y) ^2
plot(J)
J = (Qtx - y)^2
y = runif(10001,0,1)
J = (Qtx - y)^2
plot(J)
plot(J,Qtx, type='l')
plot(Qtx,J, type='l')
Qtx = seq(-10,10,0.001)
y = runif(10001,0,1)
J = (Qtx - y)^2
y = runif(20001,0,1)
J = (Qtx - y)^2
plot(Qtx,J, type='l')
J = (1/(1+exp(-Qtx)) - y)^2
plot(Qtx,J, type='l')
plot(Qtx,J)
plot(Qtx,J,pch='.')
J = (Qtx - y)^2
plot(Qtx,J,pch='.')
plot(J)
Qtx = seq(-10,10,0.1)
length(Qtx)
y = runif(length(Qtx),0,1)
J = (Qtx - y)^2
plot(Qtx,J,pch='.')
plot(J,pct='.')
plot(Qtx,J,pch='.')
plot(J,pct='.')
J = (1/(1+exp(-Qtx)) - y)^2
plot(J,pct='.')
plot(Qtx,J,pch='.')
Qtx = seq(-10,10,0.01)
y = runif(length(Qtx),0,1)
J = (Qtx - y)^2
plot(Qtx,J,pch='.')
plot(J,pct='.')
plot(Qtx,J,pch='.')
J = (1/(1+exp(-Qtx)) - y)^2
plot(Qtx,J,pch='.')
# resenje
J = log(1/(1+exp(-Qtx))) + log(1-1/(1+exp(-Qtx)))
plot(J,Qtx, type='l')
plot(J,Qtx)
plot(Qtx,J)
J = -log(1/(1+exp(-Qtx))) - log(1-1/(1+exp(-Qtx)))
plot(Qtx,J)
plot(Qtx,J,type='l')
Qtx = seq(-10,10,0.001)
y = runif(length(Qtx),0,1)
J = (Qtx - y)^2
plot(Qtx,J,pch='.')
J = (1/(1+exp(-Qtx)) - y)^2
plot(Qtx,J,pch='.')
y = round(runif(length(Qtx),0,1))
J = (Qtx - y)^2
plot(Qtx,J,pch='.')
J = (1/(1+exp(-Qtx)) - y)^2
plot(Qtx,J,pch='.')
# resenje
J = -log(1/(1+exp(-Qtx))) - log(1-1/(1+exp(-Qtx)))
plot(Qtx,J,type='l')
J = -log(1/(1+exp(-Qtx))) - log(1-1/(1+exp(-Qtx)))
plot(Qtx,J,type='l')
J = (Qtx - y)^2 # prema linearnoj regresiji
plot(Qtx,J,pch='.') # J konvexno
Qtx = seq(-10,10,1)
y = round(runif(length(Qtx),0,1)) # y je 1 ili 0
J = (Qtx - y)^2 # prema linearnoj regresiji
plot(Qtx,J,pch='.') # J konvexno
Qtx = seq(-10,10,0.01)
y = round(runif(length(Qtx),0,1)) # y je 1 ili 0
J = (Qtx - y)^2 # prema linearnoj regresiji
plot(Qtx,J,pch='.') # J konvexno
Qtx = seq(-10,10,0.001) # za y=1
hq = 1/(1+exp(-Qtx))
plot(Qtx,hq,type='l') # hq E [0.5,1)
cost = -log(1/(1+exp(-Qtx))) # cost za y=1
plot(hq,cost,type='l')
Qtx = seq(-10,10,0.01)
y = round(runif(length(Qtx),0,1)) # y je 1 ili 0
J = (Qtx - y)^2 # prema linearnoj regresiji
plot(Qtx,J,pch='.') # J konvexno
J = (1/(1+exp(-Qtx)) - y)^2 # promenio sam hq u sigmoidnu funkciju
plot(Qtx,J,pch='.') # J vise nije konvexno !
hq = 1/(1+exp(-Qtx))
J = (hq - y)^2 # promenio sam hq u sigmoidnu funkciju
plot(hq,J,pch='.') # J vise nije konvexno !
Qtx = seq(-10,10,0.01)
y = round(runif(length(Qtx),0,1)) # y je 1 ili 0
J = (Qtx - y)^2 # prema linearnoj regresiji
plot(Qtx,J,pch='.') # J konvexno
hq = 1/(1+exp(-Qtx))
J = (hq - y)^2 # promenio sam hq u sigmoidnu funkciju
plot(hq,J,pch='.') # J vise nije konvexno !
legend(c("a","b"))
?legend
J = -log(1/(1+exp(-Qtx))) - log(1-1/(1+exp(-Qtx)))
plot(Qtx,J,type='l')
J = (hq - y)^2 # promenio sam hq u sigmoidnu funkciju
plot(hq,J,pch='.') # J vise nije konvexno !
J = -log(1/(1+exp(-Qtx))) - log(1-1/(1+exp(-Qtx)))
plot(Qtx,J,type='l')
exp(-3)
exp(-30)
exp(-300)
exp(10)
exp(3)
exp(100)
exp(10)
x=1:100
plot(exp(x))
plot(exp(x),type='l')
x=-10:10
plot(exp(x),type='l')
x=-5:10
plot(exp(x),x,type='l')
plot(x,exp(x),type='l')
x=-2:120
plot(x,exp(x),type='l')
x=-2:12
plot(x,exp(x),type='l')
x=-2:5
plot(x,exp(x),type='l')
data = read.csv()
data = read.csv("dataSetLaptops.txt")
setwd("C:/Users/Stefan/Dropbox/workplaces/Java/IS eBay")
data = read.csv("dataSetLaptops.txt")
View(data)
teal(data)
tail(data)
data = read.csv("dataSetLaptops.txt")
View(data)
?read.csv
View(data)
data = read.csv("dataSetLaptops.txt",header = T,  stringsAsFactors=T)
View(data)
data = read.csv("dataSetLaptops.csv",header = T,  stringsAsFactors=T)
View(data)
