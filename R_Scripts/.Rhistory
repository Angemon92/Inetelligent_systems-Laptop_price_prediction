"Release year" = sum(is.na(data$releaseYear)),
"Graphics processing type" = sum(is.na(data$graphicsProcessingType)),
"Condition" = sum(is.na(data$condition)),
"Shipping price" = sum(is.na(data$shippingPrice)),
"Screen size" = sum(is.na(data$screenSize)),
"Hard drive" = sum(is.na(data$hardDriveGB)),
"RAM" = sum(is.na(data$ramGB)),
"Processing speed" = sum(is.na(data$processorSpeedGHZ)) )
p = barplot(naValues, main="Missing values per attribute", xlab="", ylab="", ylim=c(0,35000), xaxt="n")
labs <- as.factor(names(naValues))
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
rm(p)
rm(x)
sapply(data$returnShippingPaidBy, if(is.na(x)){x=sample(levels(data$returnShippingPaidBy),1)} )
sapply(data$returnShippingPaidBy, function(x) if(is.na(x)){x=sample(levels(data$returnShippingPaidBy),1)} )
x = data
interval(2)
for(i in 1:nrows(x)){
}
for(i in 1:nrow(x)){
}
for(j in 1:ncol(x)){
for(i in 1:nrow(x)){
if(is.na(x$[i,j])) x[i,j] = sample(levels(x[,j]),1)
}
for(j in 1:ncol(x)){
for(i in 1:nrow(x)){
if(is.na(x$[i,j])) x[i,j] = sample(levels(x[,j]),1)
for(j in 1:ncol(x)){
for(i in 1:nrow(x)){
if(is.na(x[i,j])) x[i,j] = sample(levels(x[,j]),1)
}
}
for(j in c("returnShippingPaidBy","type")){
for(i in 1:nrow(x)){
if(is.na(x[i,j])) x[i,j] = sample(levels(x[,j]),1)
}
}
table(x$returnShippingPaidBy
)
View(x)
names(data)
for(j in c("returnShippingPaidBy","type","brand","operatingSystem","processorType","releaseYear","condition" )){
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = sample(levels(data[,j]),1)
}
}
naValues = c( "Return shipping paid by" = sum(is.na(data$returnShippingPaidBy)),
"Type of computer" = sum(is.na(data$type)),
"Brand" = sum(is.na(data$brand)),
"Operating system" = sum(is.na(data$operatingSystem)),
"ProcessorType" = sum(is.na(data$processorType)),
"Release year" = sum(is.na(data$releaseYear)),
"Graphics processing type" = sum(is.na(data$graphicsProcessingType)),
"Condition" = sum(is.na(data$condition)),
"Shipping price" = sum(is.na(data$shippingPrice)),
"Screen size" = sum(is.na(data$screenSize)),
"Hard drive" = sum(is.na(data$hardDriveGB)),
"RAM" = sum(is.na(data$ramGB)),
"Processing speed" = sum(is.na(data$processorSpeedGHZ)) )
p = barplot(naValues, main="Missing values per attribute", xlab="", ylab="", ylim=c(0,35000), xaxt="n")
labs <- as.factor(names(naValues))
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
rm(p,labs,naValues)
names(data)
for(j in c("screenSize","hardDriveGB","ramBG","processorSpeedGHZ")){
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = sample(levels(data[,j]),1)
}
}
?median
median(data$ramGB)
median(data$ramGB,na.rm=T)
for(j in c("screenSize","hardDriveGB","ramBG","processorSpeedGHZ")){
median = median((data[,j]),na.rm=TRUE)
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = median
}
}
for(j in c("screenSize","hardDriveGB","ramGB","processorSpeedGHZ")){
median = median((data[,j]),na.rm=TRUE)
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = median
}
}
rm(i,j,median)
rm(x)
naValues = c( "Return shipping paid by" = sum(is.na(data$returnShippingPaidBy)),
"Type of computer" = sum(is.na(data$type)),
"Brand" = sum(is.na(data$brand)),
"Operating system" = sum(is.na(data$operatingSystem)),
"ProcessorType" = sum(is.na(data$processorType)),
"Release year" = sum(is.na(data$releaseYear)),
"Graphics processing type" = sum(is.na(data$graphicsProcessingType)),
"Condition" = sum(is.na(data$condition)),
"Shipping price" = sum(is.na(data$shippingPrice)),
"Screen size" = sum(is.na(data$screenSize)),
"Hard drive" = sum(is.na(data$hardDriveGB)),
"RAM" = sum(is.na(data$ramGB)),
"Processing speed" = sum(is.na(data$processorSpeedGHZ)) )
p = barplot(naValues, main="Missing values per attribute", xlab="", ylab="", ylim=c(0,35000), xaxt="n")
labs <- as.factor(names(naValues))
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
names()
names(data)
for(j in c("returnShippingPaidBy","type","brand","operatingSystem","processorType","releaseYear","condition","graphicsProcessingType" )){
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = sample(levels(data[,j]),1)
}
}
for(j in c("shippingPrice","screenSize","hardDriveGB","ramGB","processorSpeedGHZ")){
median = median((data[,j]),na.rm=TRUE)
for(i in 1:nrow(data)){
if(is.na(data[i,j])) data[i,j] = median
}
}
rm(i,j,median)
naValues = c( "Return shipping paid by" = sum(is.na(data$returnShippingPaidBy)),
"Type of computer" = sum(is.na(data$type)),
"Brand" = sum(is.na(data$brand)),
"Operating system" = sum(is.na(data$operatingSystem)),
"ProcessorType" = sum(is.na(data$processorType)),
"Release year" = sum(is.na(data$releaseYear)),
"Graphics processing type" = sum(is.na(data$graphicsProcessingType)),
"Condition" = sum(is.na(data$condition)),
"Shipping price" = sum(is.na(data$shippingPrice)),
"Screen size" = sum(is.na(data$screenSize)),
"Hard drive" = sum(is.na(data$hardDriveGB)),
"RAM" = sum(is.na(data$ramGB)),
"Processing speed" = sum(is.na(data$processorSpeedGHZ)) )
p = barplot(naValues, main="Missing values per attribute", xlab="", ylab="", ylim=c(0,35000), xaxt="n")
labs <- as.factor(names(naValues))
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
rm(p,labs,naValues)
write.table
?write.table
?write.csv
write.table(data,file="dateSetLaptopsPreprocessed", row.names=F, quote=F)
write.table(data,file="dateSetLaptopsPreprocessed.csv", row.names=F, quote=F)
View(data)
setwd("C:/Users/Stefan/Dropbox/workplaces/Java/IS eBay")
write.table(data,file="../Database/dateSetLaptopsPreprocessed.csv", row.names=F, quote=F)
setwd("C:/Users/Stefan/Dropbox/workplaces/Java/IS eBay/R_Scripts")
write.table(data,file="../Database/dateSetLaptopsPreprocessed.csv", row.names=F, quote=F)
write.csv(data,file="../Database/dateSetLaptopsPreprocessed.csv", row.names=F, quote=F)
read.csv("../Database/dateSetLaptopsPreprocessed.csv")
x = read.csv("../Database/dateSetLaptopsPreprocessed.csv")
View(dataOriginal)
View(x)
par(mfrow=c(1,3))
par(las=1)
plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", ylim=c(0,11000))
p = plot(data$type, main="Type of computer", xlab="", ylab="", ylim=c(0,14000), xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", ylim=c(0,6000), xaxt="n")
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
par(mfrow=c(1,2))
par(las=1)
plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", ylim=c(0,11000))
p = plot(data$type, main="Type of computer", xlab="", ylab="", ylim=c(0,14000), xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
par(mfrow=c(1,3), tcl=-0.5, family="serif", mai=c(0.3,0.3,0.3,0.3))
par(las=1)
plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", ylim=c(0,11000))
p = plot(data$type, main="Type of computer", xlab="", ylab="", ylim=c(0,14000), xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", ylim=c(0,6000), xaxt="n")
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
?par
par( mfrow = c( 2, 3 ) )
par(las=1)
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", ylim=c(0,11000))
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$type, main="Type of computer", xlab="", ylab="", ylim=c(0,14000), xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", ylim=c(0,6000), xaxt="n")
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$operatingSystem, main="Operating system", xlab="", ylab="", ylim=c(0,10000), xaxt="n")
labs <- levels(data$operatingSystem)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$processorType, main="Processor type", xlab="", ylab="", ylim=c(0,14000))
labs <- levels(data$processorType)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$releaseYear, main="Release year", xlab="", ylab="", ylim=c(0,1000), xaxt="n")
labs <- levels(data$releaseYear)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
par( mfrow = c( 2, 2 ) )
par(las=1)
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", ylim=c(0,11000))
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
labs <- levels(data$returnShippingPaidBy)
p = plot(data$type, main="Type of computer", xlab="", ylab="", ylim=c(0,14000), xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", ylim=c(0,6000), xaxt="n")
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$operatingSystem, main="Operating system", xlab="", ylab="", ylim=c(0,10000), xaxt="n")
labs <- levels(data$operatingSystem)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="",xaxt="n")
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$type, main="Type of computer", xlab="", ylab="", xaxt="n")
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", xaxt="n")
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$operatingSystem, main="Operating system", xlab="", ylab="", xaxt="n")
labs <- levels(data$operatingSystem)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
smoothScatter(data[,c("shippingPrice","sellingPrice")], xlab = "Shipping price [USD]", ylab="Selling price")
abline(lm(sellingPrice ~ shippingPrice, data = data), col="blue")
par( mfrow = c( 1, 1 ) )
par(las=1)
smoothScatter(data[,c("shippingPrice","sellingPrice")], xlab = "Shipping price [USD]", ylab="Selling price")
p = plot(data$condition, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$condition)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
p = plot(data$condition, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$condition)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
dataOriginal = read.csv("../Database/dataSetLaptops.csv",header = T,  stringsAsFactors=T, na.strings = "null",
colClasses=c("numeric","numeric","factor","numeric","factor","factor","factor","factor",
"factor","numeric","numeric","numeric","factor","numeric","factor","factor","factor"))
#apply(dataOriginal,2,typeof)
# Filtering and preprocessing data
data = dataOriginal[,-1] # itemID
# HINT: is.na(data$attribute) is added becouse condition on NA is NA insted of T/F. Example: data[ condition ,]
data = data[data$shippingCurrency=="USD" & !is.na(data$shippingCurrency),]
data = data[data$sellingCurrency=="USD" & !is.na(data$sellingCurrency),]
data = data[,-3] #shippingCurrency
data = data[,-2] #sellingCurrency
data = data[data$sellingPrice<=2000 | is.na(data$sellingPrice),]
data = data[data$sellingPrice>20 | is.na(data$sellingPrice),]
data = data[(data$ramGB<=32 | is.na(data$ramGB)),]
data = data[data$processorSpeedGHZ<=4 | is.na(data$processorSpeedGHZ),]
data = data[data$hardDriveGB<=4000 | is.na(data$hardDriveGB),]
data = data[data$screenSize<=20 | is.na(data$screenSize),]
# Vizualization
par( mfrow = c( 1, 1 ) )
par(las=1)
smoothScatter(data[,c("shippingPrice","sellingPrice")], xlab = "Shipping price [USD]", ylab="Selling price")
names(data)
dataOriginal = read.csv("../Database/dataSetLaptops.csv",header = T,  stringsAsFactors=T, na.strings = "null",
colClasses=c("numeric","numeric","factor","numeric","factor","factor","factor","factor",
"factor","numeric","numeric","numeric","factor","numeric","factor","factor","factor"))
#apply(dataOriginal,2,typeof)
# Filtering and preprocessing data
data = dataOriginal[,-1] # itemID
# HINT: is.na(data$attribute) is added becouse condition on NA is NA insted of T/F. Example: data[ condition ,]
data = data[data$shippingCurrency=="USD" & !is.na(data$shippingCurrency),]
data = data[data$sellingCurrency=="USD" & !is.na(data$sellingCurrency),]
data = data[,-2] #sellingCurrency
data = data[,-3] #shippingCurrency
data = data[data$sellingPrice<=2000 | is.na(data$sellingPrice),]
data = data[data$sellingPrice>20 | is.na(data$sellingPrice),]
data = data[(data$ramGB<=32 | is.na(data$ramGB)),]
data = data[data$processorSpeedGHZ<=4 | is.na(data$processorSpeedGHZ),]
data = data[data$hardDriveGB<=4000 | is.na(data$hardDriveGB),]
data = data[data$screenSize<=20 | is.na(data$screenSize),]
# Vizualization
smoothScatter(data[,c("shippingPrice","sellingPrice")], xlab = "Shipping price [USD]", ylab="Selling price")
abline(lm(sellingPrice ~ shippingPrice, data = data), col="blue")
dataOriginal = read.csv("../Database/dataSetLaptops.csv",header = T,  stringsAsFactors=T, na.strings = "null",
colClasses=c("numeric","numeric","factor","numeric","factor","factor","factor","factor",
"factor","numeric","numeric","numeric","factor","numeric","factor","factor","factor"))
#apply(dataOriginal,2,typeof)
# Filtering and preprocessing data
data = dataOriginal[,-1] # itemID
# HINT: is.na(data$attribute) is added becouse condition on NA is NA insted of T/F. Example: data[ condition ,]
data = data[data$shippingCurrency=="USD" & !is.na(data$shippingCurrency),]
data = data[data$sellingCurrency=="USD" & !is.na(data$sellingCurrency),]
data = data[,-2] #sellingCurrency
data = data[,-3] #shippingCurrency
data = data[data$sellingPrice<=2000 | is.na(data$sellingPrice),]
data = data[data$sellingPrice>20 | is.na(data$sellingPrice),]
data = data[(data$ramGB<=32 | is.na(data$ramGB)),]
data = data[data$processorSpeedGHZ<=4 | is.na(data$processorSpeedGHZ),]
data = data[data$hardDriveGB<=4000 | is.na(data$hardDriveGB),]
data = data[data$screenSize<=20 | is.na(data$screenSize),]
# Vizualization
par( mfrow = c( 1, 1 ) )
par(las=1)
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
smoothScatter(data[,c("screenSize","sellingPrice")], xlab = "Screen size [inches]", ylab="Selling price")
abline(lm(sellingPrice ~ screenSize, data = data), col="blue")
smoothScatter(data[,c("shippingPrice","sellingPrice")], xlab = "Shipping price [USD]", ylab="Selling price")
abline(lm(sellingPrice ~ shippingPrice, data = data), col="blue")
smoothScatter(data[,c("hardDriveGB","sellingPrice")], xlab = "Hard drive [GB]", ylab="Selling price")
abline(lm(sellingPrice ~ hardDriveGB, data = data), col="blue")
smoothScatter(data[,c("ramGB","sellingPrice")], xlab = "RAM [GB]", ylab="Selling price")
abline(lm(sellingPrice ~ ramGB, data = data), col="blue")
smoothScatter(data[,c("processorSpeedGHZ","sellingPrice")], xlab = "Processor speed [GHZ]", ylab="Selling price")
abline(lm(sellingPrice ~ processorSpeedGHZ, data = data), col="blue")
p <- ggplot(data, aes(factor(brand), processorSpeed))
library(ggplot2)
p <- ggplot(data, aes(factor(brand), processorSpeed))
p1 <- p + geom_boxplot(outlier.shape = 3)
p1
p <- ggplot(data, aes(factor(brand), processorSpeedGHZ))
p1 <- p + geom_boxplot(outlier.shape = 3)
p1
p1 + geom_point(position = position_jitter(width = 0.2))
smoothScatter(data[,c("shippingPrice","sellingPrice")],main="Shipping price over selling price" ,xlab = "Shipping price [USD]", ylab="Selling price")
abline(lm(sellingPrice ~ shippingPrice, data = data), col="blue")
smoothScatter(data[,c("screenSize","sellingPrice")],main="Screen size price over selling price", xlab = "Screen size [inches]", ylab="Selling price")
abline(lm(sellingPrice ~ screenSize, data = data), col="blue")
smoothScatter(data[,c("hardDriveGB","sellingPrice")],main="Hard drive over selling price",  xlab = "Hard drive [GB]", ylab="Selling price")
abline(lm(sellingPrice ~ hardDriveGB, data = data), col="blue")
smoothScatter(data[,c("ramGB","sellingPrice")],main="RAM over selling price",  xlab = "RAM [GB]", ylab="Selling price")
abline(lm(sellingPrice ~ ramGB, data = data), col="blue")
smoothScatter(data[,c("processorSpeedGHZ","sellingPrice")],main="Processor speed over selling price",  xlab = "Processor speed [GHZ]", ylab="Selling price")
abline(lm(sellingPrice ~ processorSpeedGHZ, data = data), col="blue")
p <- ggplot(processorSpeed, aes(factor(type), data))
p1 <- p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeedGHZ, aes(factor(type), data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
names(data)
p <- ggplot(processorSpeedGHZ, aes(factor(type), data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeedGHZ, aes(factor(type), data=data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data$processorSpeedGHZ, aes(factor(type), data=data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
library(ggplot2)
p <- ggplot(processorSpeedGHZ, aes(factor(type), data=data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeed, aes(factor(type), data=data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeed, aes(factor(type), data=data)) +
geom_boxplot(outlier.shape = 3) +
geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeed, aes(factor(type), data=data))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeedGHZ, aes(factor(type), data=data))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(processorSpeedGHZ, aes(factor(type)), data=data)
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(shippingPrice, aes(factor(returnShippingPaidBy)), data=data)
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(type), processorSpeedGHZ))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(levels(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
levels(data$shippingPrice)
levels(data$returnShippingPaidBy)
p <- ggplot(data, aes(levels(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factors(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(releaseYear),processorSpeed))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(returnShippingPaidBy),shippingPrice))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p <- ggplot(data, aes(factor(releaseYear),processorSpeedGHZ))
p1 = p + geom_boxplot(outlier.shape = 3)
p1 + geom_point(position = position_jitter(width = 0.2))
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
par( mfrow = c( 1, 1 ) )
par(las=1)
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$type, main="Type of computer", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$type)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$brand, main="Brand", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,10000) )
labs <- levels(data$brand)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$operatingSystem, main="Operating system", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,12000) )
labs <- levels(data$operatingSystem)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$processorType, main="Processor type", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$processorType)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$releaseYear, main="Release year", xlab="", ylab="",  xaxt="n", col="lightblue", ylim=c(0,1200) )
labs <- levels(data$releaseYear)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$graphicsProcessingType, main="Graphic processing type", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,12000) )
labs <- levels(data$graphicsProcessingType)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
p = plot(data$condition, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$condition)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
data[data$condition=="Brand New","condition"] = "New"
data[data$condition=="Like New","condition"] = "New"
data[data$condition=="New other (see details)","condition"] = "New"
p = plot(data$condition, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$condition)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
x = data$condition
p = plot(x, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$condition)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
x = data[[,"condition"]]
x = data[,"condition"]
x = as.character(data[,"condition"])
levels(x)
factors(x)
factor(x)
as.factor(x)
x = as.factor(x)
x = levels(x)
x = as.character(data[,"condition"])
x = as.factor(x)
levels(x)
p = plot(x, main="Condition", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(x)
text(cex=1, x=p-.25, y=-1.25, labs, xpd=T, srt=45)
dist(data$sellingPrice)
dist(data$sellingPrice)
?dist
density(data$sellingPrice)
plot(density(data$sellingPrice))
?density
plot(density(data$sellingPrice, freq=FALS))
plot(density(data$sellingPrice, freq=F))
plot(density(data$sellingPrice, freq=T))
plot(density(data$sellingPrice, freq=T))
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d, ylim=c(0,4) )
hist(data$sellingPrice, breaks=trunc(min(data$sellingPrice)):(1+trunc(max(data$sellingPrice))), add=TRUE)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d, ylim=c(0,4) )
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
par(las=1)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
hist(data$sellingPrice, breaks=trunc(min(data$sellingPrice)):(1+trunc(max(data$sellingPrice))), add=TRUE)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
hist(data$sellingPrice)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
hist(data$sellingPrice)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
hist(data$sellingPrice,add=TRUE)
p <- density(data$sellingPrice)
p <- p * length(data$sellingPrice)  ; plot(d)
p <- p + length(data$sellingPrice)  ; plot(d)
p <- density(data$sellingPrice)
p <- p + length(data$sellingPrice)  ; plot(d)
plot(d)
p <- density(data$sellingPrice)
p <- p * length(data$sellingPrice)  ;
plot(p)
p <- density(data$sellingPrice)
plot(p)
d <- density(data$sellingPrice)
d$y <- d$y * length(data$sellingPrice)  ; plot(d)
hist(data$sellingPrice)
hist(data$sellingPrice, ylim=c(0,12000))
?hist
hist(data$sellingPrice, ylim=c(0,12000),breaks = "Sturges")
hist(data$sellingPrice, ylim=c(0,12000),breaks = 1)
hist(data$sellingPrice, ylim=c(0,12000),breaks = 30)
hist(data$sellingPrice, ylim=c(0,12000),breaks = 100)
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100)
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,100))
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,200))
?xaxp
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,201))
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10))
plot(density(data$sellingPRICE))
plot(density(data$sellingPrice))
p = plot(data$returnShippingPaidBy, main="Return shipping paid by", xlab="", ylab="", xaxt="n", col="lightblue", ylim=c(0,20000) )
labs <- levels(data$returnShippingPaidBy)
text(cex=1, x=p-.25, y=-1.25, labs, srt=45,xpd=T)
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10))
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10), main="Frequency distribution of selling price", xlab="Selling price")
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10), main="Frequency distribution of computer selling price", xlab="Selling price")
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10), main="Frequency distribution of computer price", xlab="Selling price")
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10), main="Frequency distribution of selling price", xlab="Selling price")
hist(data$sellingPrice, ylim=c(0,4000),breaks = 100, xaxp  = c(0, 2000,10), col="lightblue", main="Frequency distribution of selling price", xlab="Selling price")
